<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Giovanni Torres</title><link href="http://giovannitorres.me/" rel="alternate"></link><link href="http://giovannitorres.me/feeds/rpm.atom.xml" rel="self"></link><id>http://giovannitorres.me/</id><updated>2015-11-29T00:00:00-05:00</updated><entry><title>Signing RPMs</title><link href="http://giovannitorres.me/signing-rpms.html" rel="alternate"></link><published>2015-11-29T00:00:00-05:00</published><author><name>Giovanni Torres</name></author><id>tag:giovannitorres.me,2015-11-29:signing-rpms.html</id><summary type="html">&lt;h4&gt;Introduction&lt;/h4&gt;
&lt;p&gt;So far, we have &lt;a href="http://giovannitorres.me/how-to-setup-an-rpm-build-environment-on-centos-6.html"&gt;setup an RPM build
environment&lt;/a&gt;
, &lt;a href="http://giovannitorres.me/how-to-setup-an-rpm-signing-key.html"&gt;setup our RPM signing key&lt;/a&gt;,
and &lt;a href="http://giovannitorres.me/how-to-build-rpms-collectd-example.html"&gt;built RPMs&lt;/a&gt;.  The last
thing left to do is to use the rpm signing key to sign our newly built RPMs.&lt;/p&gt;
&lt;p&gt;In this last part of this guide, we will sign the collectd RPMs that we built
in the &lt;a href="http://giovannitorres.me/how-to-build-rpms-collectd-example.html"&gt;Part 3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Configure %_gpg_name in Macro File&lt;/h4&gt;
&lt;p&gt;Before we can sign RPMs, we need to tell the &lt;strong&gt;rpm&lt;/strong&gt; command which gpg key to use.
In &lt;a href="http://giovannitorres.me/how-to-setup-an-rpm-build-environment-on-centos-6.html"&gt;Part 1&lt;/a&gt;,
we saw the &lt;code&gt;.rpmmacros&lt;/code&gt; file, which included some default rpm macros.&lt;/p&gt;
&lt;p&gt;We now need to add an additional macro, called &lt;strong&gt;%_gpg_name&lt;/strong&gt;, along with our
GPG key ID.  To find the GPG key id, run the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[makerpm@localhost ~]$ gpg --list-public-keys
/home/makerpm/.gnupg/pubring.gpg
---------------------------------
pub   2048R/512A2AA0 2015-11-30
uid                  Example Org Signing Key &amp;lt;support@example.com&amp;gt;
sub   2048R/D97540C0 2015-11-30
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The GPG key ID is &lt;strong&gt;512A2AA0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Now, echo the macro and the GPG key ID to your ~/.rpmmacros file as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo &amp;quot;%_gpg_name 512A2AA0&amp;quot; &amp;gt;&amp;gt; ~/.rpmmacros
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Signing RPMs&lt;/h4&gt;
&lt;p&gt;Change to the directory where the RPMs were created.  Depending on the
chosen method, the directory could be either of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$HOME/rpmbuild/RPMS/x86_64/ &lt;/li&gt;
&lt;li&gt;/var/lib/mock/centos-6-x86_64/result/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then, run the following &lt;strong&gt;rpm&lt;/strong&gt; command to add a signature to a single RPM (you
will be prompted for the GPG key passphrase):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[makerpm@localhost ~]$&lt;/span&gt; rpm --addsign -v collectd-5.5.0-1.el6.x86_64.rpm 
&lt;span class="go"&gt;Enter pass phrase: &lt;/span&gt;
&lt;span class="go"&gt;Pass phrase is good.&lt;/span&gt;
&lt;span class="go"&gt;collectd-5.5.0-1.el6.x86_64.rpm:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can sign all the RPMs at once using file globbing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[makerpm@localhost x86_64]$ rpm --addsign -v *\.rpm
Enter pass phrase: 
Pass phrase is good.
collectd-5.5.0-1.el6.x86_64.rpm:
collectd-amqp-5.5.0-1.el6.x86_64.rpm:
collectd-apache-5.5.0-1.el6.x86_64.rpm:
collectd-ascent-5.5.0-1.el6.x86_64.rpm:
collectd-bind-5.5.0-1.el6.x86_64.rpm:
collectd-ceph-5.5.0-1.el6.x86_64.rpm:
collectd-collection3-5.5.0-1.el6.x86_64.rpm:
collectd-contrib-5.5.0-1.el6.x86_64.rpm:
collectd-curl-5.5.0-1.el6.x86_64.rpm:
collectd-curl_json-5.5.0-1.el6.x86_64.rpm:
collectd-curl_xml-5.5.0-1.el6.x86_64.rpm:
collectd-dbi-5.5.0-1.el6.x86_64.rpm:
collectd-debuginfo-5.5.0-1.el6.x86_64.rpm:
collectd-disk-5.5.0-1.el6.x86_64.rpm:
collectd-dns-5.5.0-1.el6.x86_64.rpm:
collectd-email-5.5.0-1.el6.x86_64.rpm:
collectd-gmond-5.5.0-1.el6.x86_64.rpm:
collectd-hddtemp-5.5.0-1.el6.x86_64.rpm:
collectd-ipmi-5.5.0-1.el6.x86_64.rpm:
collectd-iptables-5.5.0-1.el6.x86_64.rpm:
collectd-java-5.5.0-1.el6.x86_64.rpm:
collectd-log_logstash-5.5.0-1.el6.x86_64.rpm:
collectd-lvm-5.5.0-1.el6.x86_64.rpm:
collectd-memcachec-5.5.0-1.el6.x86_64.rpm:
collectd-modbus-5.5.0-1.el6.x86_64.rpm:
collectd-mysql-5.5.0-1.el6.x86_64.rpm:
collectd-netlink-5.5.0-1.el6.x86_64.rpm:
collectd-nginx-5.5.0-1.el6.x86_64.rpm:
collectd-notify_desktop-5.5.0-1.el6.x86_64.rpm:
collectd-notify_email-5.5.0-1.el6.x86_64.rpm:
collectd-nut-5.5.0-1.el6.x86_64.rpm:
collectd-openldap-5.5.0-1.el6.x86_64.rpm:
collectd-perl-5.5.0-1.el6.x86_64.rpm:
collectd-php-collection-5.5.0-1.el6.x86_64.rpm:
collectd-pinba-5.5.0-1.el6.x86_64.rpm:
collectd-ping-5.5.0-1.el6.x86_64.rpm:
collectd-postgresql-5.5.0-1.el6.x86_64.rpm:
collectd-python-5.5.0-1.el6.x86_64.rpm:
collectd-redis-5.5.0-1.el6.x86_64.rpm:
collectd-rrdtool-5.5.0-1.el6.x86_64.rpm:
collectd-sensors-5.5.0-1.el6.x86_64.rpm:
collectd-smart-5.5.0-1.el6.x86_64.rpm:
collectd-snmp-5.5.0-1.el6.x86_64.rpm:
collectd-utils-5.5.0-1.el6.x86_64.rpm:
collectd-varnish-5.5.0-1.el6.x86_64.rpm:
collectd-virt-5.5.0-1.el6.x86_64.rpm:
collectd-write_http-5.5.0-1.el6.x86_64.rpm:
collectd-write_redis-5.5.0-1.el6.x86_64.rpm:
collectd-write_riemann-5.5.0-1.el6.x86_64.rpm:
libcollectdclient-5.5.0-1.el6.x86_64.rpm:
libcollectdclient-devel-5.5.0-1.el6.x86_64.rpm:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Verifying RPMs&lt;/h4&gt;
&lt;p&gt;To verify the signature, use the &lt;code&gt;--checksig&lt;/code&gt; rpm flag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[makerpm@localhost x86_64]$&lt;/span&gt; rpm --checksig collectd-5.5.0-1.el6.x86_64.rpm 
&lt;span class="go"&gt;collectd-5.5.0-1.el6.x86_64.rpm: rsa sha1 (md5) pgp md5 OK&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For a more verbose output, add the &lt;code&gt;-v&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[makerpm@localhost x86_64]$&lt;/span&gt; rpm --checksig -v collectd-5.5.0-1.el6.x86_64.rpm 
&lt;span class="go"&gt;collectd-5.5.0-1.el6.x86_64.rpm:&lt;/span&gt;
&lt;span class="go"&gt;    Header V4 RSA/SHA1 Signature, key ID 512a2aa0: OK&lt;/span&gt;
&lt;span class="go"&gt;    Header SHA1 digest: OK (f62c64dc9938b6d86c91d4f430b293dbb4f4cad3)&lt;/span&gt;
&lt;span class="go"&gt;    V4 RSA/SHA1 Signature, key ID 512a2aa0: OK&lt;/span&gt;
&lt;span class="go"&gt;    MD5 digest: OK (53a3f30fffd28e5bfba65a7f2608e8a2)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remember in Part 1, we exported the gpg key from the keyring and imported the
key into the RPM database.  If you forgot to import the key into the RPM
database, you would see &lt;strong&gt;MISSING KEYS&lt;/strong&gt; and &lt;strong&gt;NOKEY&lt;/strong&gt; in the output instead:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[makerpm@localhost x86_64]$ rpm --checksig collectd-5.5.0-1.el6.x86_64.rpm 
collectd-5.5.0-1.el6.x86_64.rpm: RSA sha1 ((MD5) PGP) md5 NOT OK (MISSING KEYS: (MD5) PGP#512a2aa0)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[makerpm@localhost x86_64]$ rpm --checksig -v collectd-5.5.0-1.el6.x86_64.rpm 
collectd-5.5.0-1.el6.x86_64.rpm:
    Header V4 RSA/SHA1 Signature, key ID 512a2aa0: NOKEY
    Header SHA1 digest: OK (f62c64dc9938b6d86c91d4f430b293dbb4f4cad3)
    V4 RSA/SHA1 Signature, key ID 512a2aa0: NOKEY
    MD5 digest: OK (53a3f30fffd28e5bfba65a7f2608e8a2)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;RPM Distribution&lt;/h4&gt;
&lt;p&gt;Now that we have signed RPMs, we are ready to distribute them to other servers
within the infrastructure.  There are various ways to do this, so use a method
that fits your workflow.&lt;/p&gt;
&lt;p&gt;For example, you could use a configuration management tool, like Puppet,
Ansible or Salt, to distribute the RPM GPG key to all machines and then
install the RPM.  Alternatively, if you are using Spacewalk, for example, to
manage custom YUM repositories, you could add the RPM GPG key to Spacewalk and
also add the signed RPMs to a custom repository.&lt;/p&gt;</summary><category term="rpm"></category></entry><entry><title>How to Build RPMs - Collectd Example</title><link href="http://giovannitorres.me/how-to-build-rpms-collectd-example.html" rel="alternate"></link><published>2015-09-19T00:00:00-04:00</published><author><name>Giovanni Torres</name></author><id>tag:giovannitorres.me,2015-09-19:how-to-build-rpms-collectd-example.html</id><summary type="html">&lt;h4&gt;Introduction&lt;/h4&gt;
&lt;p&gt;Now that we have an &lt;a href="http://giovannitorres.me/how-to-setup-an-rpm-build-environment-on-centos-6.html"&gt;rpm build
environment&lt;/a&gt;
, we can build RPM packages.&lt;/p&gt;
&lt;p&gt;In this guide, we will use the collectd monitoring application and walk through
three different ways of building RPMs for this package:
using a spec file, rebuilding a source rpm, and using
&lt;a href="https://fedoraproject.org/wiki/Mock"&gt;mock&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Prerequisites&lt;/h4&gt;
&lt;p&gt;We already installed the necessary packages in &lt;a href="http://giovannitorres.me/how-to-setup-an-rpm-build-environment-on-centos-6.html"&gt;Part
1&lt;/a&gt;.  These
packages provide the utilities that we will use to build RPMs, namely rpmbuild,
spectool, and yum-builddep.&lt;/p&gt;
&lt;p&gt;The steps in this guide will be carried out by the &lt;strong&gt;makerpm&lt;/strong&gt; user.&lt;/p&gt;
&lt;p&gt;Additionally, we will need the source for collectd:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd $HOME&lt;/span&gt;
&lt;span class="go"&gt;mkdir src &amp;amp;&amp;amp; cd src&lt;/span&gt;
&lt;span class="go"&gt;curl --progress https://collectd.org/files/collectd-5.5.0.tar.gz | tar xz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Building RPMs from a SPEC file&lt;/h4&gt;
&lt;p&gt;A spec file includes all the information and steps the &lt;strong&gt;rpmbuild&lt;/strong&gt; command
needs to build an RPM package.  Among other things, it lists the name and
version of your application, all package dependencies and how the application
should be configured and built.  A spec file is written in plain text and, by
convention, its name is formed by appending a &lt;strong&gt;.spec&lt;/strong&gt; suffix to the application
name, for example, &lt;strong&gt;collectd.spec&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The collectd spec file is relatively complex compared to other spec files.  It
contains custom macros for the many built-in plugins as well as subpackage
definitions for each configured plugin.&lt;/p&gt;
&lt;p&gt;Have a look at the spec file and then copy it to the SPECS directory in your
rpmbuild directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="x"&gt;/src/collectd-5.5.0/contrib/redhat&lt;/span&gt;
&lt;span class="x"&gt;cp collectd.spec &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="x"&gt;/rpmbuild/SPECS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change to the SPECS directory inside your rpmbuild directory and use the
&lt;strong&gt;spectool&lt;/strong&gt; command to download the sources listed inside the spec file.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="x"&gt;/rpmbuild/SPECS&lt;/span&gt;
&lt;span class="x"&gt;spectool -g -R collectd.spec&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;strong&gt;-g&lt;/strong&gt; flag tells spectool to download the &lt;em&gt;Source&lt;/em&gt; listed in the spec file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;           collectd
&lt;span class="gh"&gt;Version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        5.5.0
&lt;span class="gh"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;         http://collectd.org/files/&lt;span class="kc"&gt;%{name}&lt;/span&gt;-&lt;span class="kc"&gt;%{version}&lt;/span&gt;.tar.bz2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;strong&gt;-R&lt;/strong&gt; flag downloads the &lt;em&gt;Source&lt;/em&gt; to the rpm's %{_sourcedir}, which
translates to &lt;strong&gt;$HOME/rpmbuild/SOURCES&lt;/strong&gt; directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rpm --eval &lt;span class="s2"&gt;&amp;quot;%{_sourcedir}&amp;quot;&lt;/span&gt;
/home/makerpm/rpmbuild/SOURCES
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, run the &lt;strong&gt;rpmbuild&lt;/strong&gt; command to build the RPM from the spec file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpmbuild -bb collectd.spec 
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;error: Failed build dependencies:&lt;/span&gt;
&lt;span class="go"&gt;    libtool-ltdl-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libcap-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    librabbitmq-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    curl-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    yajl-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libdbi-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libudev-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libpcap-devel &amp;gt;= 1.0 is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    ganglia-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    OpenIPMI-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    iptables-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    java-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    lvm2-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libmemcached-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libmodbus-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libmnl-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    iproute-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libnotify-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libesmtp-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    nut-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    openldap-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    perl-ExtUtils-Embed is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    protobuf-c-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    liboping-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    hiredis-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libatasmart-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    varnish-libs-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;span class="go"&gt;    libvirt-devel is needed by collectd-5.5.0-1.el6.x86_64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The rpmbuild process checks package dependencies based on the packages listed
in the &lt;em&gt;Requires&lt;/em&gt; and &lt;em&gt;BuildRequires&lt;/em&gt; tags in spec file.&lt;/p&gt;
&lt;p&gt;Thankfully, these dependencies are easy to satisfy with the &lt;strong&gt;yum-builddep&lt;/strong&gt;
command found in the &lt;strong&gt;yum-utils&lt;/strong&gt; package.  Run the following to download the
necessary dependencies:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum-builddep collectd.spec
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now that all dependencies are installed, re-run &lt;strong&gt;rpmbuild&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpmbuild -bb collectd.spec
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This gets to the very end and throws an error when checking rpaths:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;+ /usr/lib/rpm/check-rpaths /usr/lib/rpm/check-buildroot&lt;/span&gt;
&lt;span class="go"&gt;*******************************************************************************&lt;/span&gt;
&lt;span class="go"&gt;*&lt;/span&gt;
&lt;span class="go"&gt;* WARNING: &amp;#39;check-rpaths&amp;#39; detected a broken RPATH and will cause &amp;#39;rpmbuild&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;*          to fail. To ignore these errors, you can set the &amp;#39;$QA_RPATHS&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;*          environment variable which is a bitmask allowing the values&lt;/span&gt;
&lt;span class="go"&gt;*          below. The current value of QA_RPATHS is 0x0000.&lt;/span&gt;
&lt;span class="go"&gt;*&lt;/span&gt;
&lt;span class="go"&gt;*    0x0001 ... standard RPATHs (e.g. /usr/lib); such RPATHs are a minor&lt;/span&gt;
&lt;span class="go"&gt;*               issue but are introducing redundant searchpaths without&lt;/span&gt;
&lt;span class="go"&gt;*               providing a benefit. They can also cause errors in multilib&lt;/span&gt;
&lt;span class="go"&gt;*               environments.&lt;/span&gt;
&lt;span class="go"&gt;*    0x0002 ... invalid RPATHs; these are RPATHs which are neither absolute&lt;/span&gt;
&lt;span class="go"&gt;*               nor relative filenames and can therefore be a SECURITY risk&lt;/span&gt;
&lt;span class="go"&gt;*    0x0004 ... insecure RPATHs; these are relative RPATHs which are a&lt;/span&gt;
&lt;span class="go"&gt;*               SECURITY risk&lt;/span&gt;
&lt;span class="go"&gt;*    0x0008 ... the special &amp;#39;$ORIGIN&amp;#39; RPATHs are appearing after other&lt;/span&gt;
&lt;span class="go"&gt;*               RPATHs; this is just a minor issue but usually unwanted&lt;/span&gt;
&lt;span class="go"&gt;*    0x0010 ... the RPATH is empty; there is no reason for such RPATHs&lt;/span&gt;
&lt;span class="go"&gt;*               and they cause unneeded work while loading libraries&lt;/span&gt;
&lt;span class="go"&gt;*    0x0020 ... an RPATH references &amp;#39;..&amp;#39; of an absolute path; this will break&lt;/span&gt;
&lt;span class="go"&gt;*               the functionality when the path before &amp;#39;..&amp;#39; is a symlink&lt;/span&gt;
&lt;span class="go"&gt;*          &lt;/span&gt;
&lt;span class="go"&gt;*&lt;/span&gt;
&lt;span class="go"&gt;* Examples:&lt;/span&gt;
&lt;span class="go"&gt;* - to ignore standard and empty RPATHs, execute &amp;#39;rpmbuild&amp;#39; like&lt;/span&gt;
&lt;span class="go"&gt;*   $ QA_RPATHS=$[ 0x0001|0x0010 ] rpmbuild my-package.src.rpm&lt;/span&gt;
&lt;span class="go"&gt;* - to check existing files, set $RPM_BUILD_ROOT and execute check-rpaths like&lt;/span&gt;
&lt;span class="go"&gt;*   $ RPM_BUILD_ROOT=&amp;lt;top-dir&amp;gt; /usr/lib/rpm/check-rpaths&lt;/span&gt;
&lt;span class="go"&gt;*  &lt;/span&gt;
&lt;span class="go"&gt;*******************************************************************************&lt;/span&gt;
&lt;span class="go"&gt;ERROR   0001: file &amp;#39;/usr/bin/collectd-nagios&amp;#39; contains a standard rpath&lt;/span&gt;
&lt;span class="go"&gt;&amp;#39;/usr/lib64&amp;#39; in [/usr/lib64]&lt;/span&gt;
&lt;span class="go"&gt;ERROR   0001: file &amp;#39;/usr/bin/collectdctl&amp;#39; contains a standard rpath&lt;/span&gt;
&lt;span class="go"&gt;&amp;#39;/usr/lib64&amp;#39; in [/usr/lib64]&lt;/span&gt;
&lt;span class="go"&gt;ERROR   0001: file &amp;#39;/usr/bin/collectd-tg&amp;#39; contains a standard rpath&lt;/span&gt;
&lt;span class="go"&gt;&amp;#39;/usr/lib64&amp;#39; in [/usr/lib64]&lt;/span&gt;
&lt;span class="go"&gt;error: Bad exit status from /var/tmp/rpm-tmp.HwWMnY (%install)&lt;/span&gt;


&lt;span class="go"&gt;RPM build errors:&lt;/span&gt;
&lt;span class="go"&gt;    Bad exit status from /var/tmp/rpm-tmp.HwWMnY (%install)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The reason it fails is because collectd hardcodes the &lt;strong&gt;/usr/lib64&lt;/strong&gt; path
into the the collectd-nagios, collectdctl and collectd-tg binaries when the
Linux dynamic loader will automatically load libraries from this path, given that it
is a system default library path.  Therefore, hardcoding this particular path
in the library is redundant.&lt;/p&gt;
&lt;p&gt;There are two ways to get around this.  The first is to comment out the
&lt;strong&gt;/usr/lib/rpm/check-rpaths&lt;/strong&gt; line from the &lt;strong&gt;$HOME/.rpmmacros&lt;/strong&gt; and then rerun the
rpmbuild command.  The second option is to tell rpmbuild to ignore standard
RPATHs by running rpmbuild as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;QA_RPATHS=0x0001 rpmbuild -bb collectd.spec
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After you rerun rpmbuild and it finishes successfully, you will see the last
line as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt; **+ exit 0**&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The built RPMs will be in the &lt;strong&gt;$HOME/rpmbuild/RPMS/x86_64&lt;/strong&gt; directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;ls $HOME/rpmbuild/RPMS/x86_64/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;collectd-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-netlink-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-amqp-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-nginx-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-apache-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-notify_desktop-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-ascent-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-notify_email-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-bind-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-nut-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-ceph-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-openldap-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-collection3-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-perl-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-contrib-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-php-collection-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-curl-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-pinba-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-curl_json-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-ping-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-curl_xml-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-postgresql-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-dbi-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-python-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-debuginfo-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-redis-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-disk-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-rrdtool-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-dns-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-sensors-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-email-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-smart-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-gmond-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-snmp-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-hddtemp-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-utils-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-ipmi-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-varnish-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-iptables-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-virt-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-java-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-write_http-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-log_logstash-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-write_redis-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-lvm-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-write_riemann-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-memcachec-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;libcollectdclient-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-modbus-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;libcollectdclient-devel-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;span class="go"&gt;collectd-mysql-5.5.0-1.el6.x86_64.rpm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Rebuilding Source RPMs (SRPMs)&lt;/h4&gt;
&lt;p&gt;Building from a src rpm is admittedly easier than from a spec file. A source
RPM, or SRPM, is the corresponding source code to a ready-to-install, compiled
RPM. It includes a spec file, source files and possibly patch files.  It can be
compiled for a particular architecture and even modified before compiling into
an RPM.  &lt;/p&gt;
&lt;p&gt;There are several places where you can find SRPMs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="ftp://ftp.redhat.com/pub/redhat/linux/enterprise/6Server/en/os/SRPMS/"&gt;Redhat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vault.centos.org/6.7/os/Source/SPackages/"&gt;CentOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dl.fedoraproject.org/pub/epel/6/SRPMS/"&gt;EPEL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Grab the src rpm for collectd from the EPEL repository.  It is an
outdated version of collectd but serves the purpose of this guide.  Download
and save the file somewhere in your home directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd $HOME&lt;/span&gt;
&lt;span class="go"&gt;mkdir local &amp;amp;&amp;amp; cd local&lt;/span&gt;
&lt;span class="go"&gt;wget http://dl.fedoraproject.org/pub/epel/6/SRPMS/collectd-4.10.9-1.el6.src.rpm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before using &lt;strong&gt;rpmbuild&lt;/strong&gt;, run &lt;strong&gt;yum-builddep&lt;/strong&gt; on the src rpm to
download any missing dependencies.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sudo yum-builddep collectd-4.10.9-1.el6.src.rpm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, use &lt;em&gt;rpmbuild&lt;/em&gt; to rebuild the src rpm:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;QA_RPATHS=0x0001 rpmbuild --rebuild collectd-4.10.9-1.el6.src.rpm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again, you can choose to either prepend the rpmbuild command with &lt;strong&gt;QA_RPATHS&lt;/strong&gt;
or comment out the &lt;strong&gt;/usr/lib/rpm/check-rpaths&lt;/strong&gt; line in your $HOME/.rpmmacros to
avoid issues with rpaths during the build.&lt;/p&gt;
&lt;p&gt;The built RPMs are again in the &lt;strong&gt;$HOME/rpmbuild/RPMS/x86_64/&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Building RPMs using Mock&lt;/h4&gt;
&lt;p&gt;Mock is a tool that creates chroot environments and builds RPM packages in
them.  It comes with default configurations, but it is easy to adapt and
customize a configuration.&lt;/p&gt;
&lt;p&gt;First, download mock:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install mock
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Mock's configuration files are stored in &lt;strong&gt;/etc/mock&lt;/strong&gt;.  Change to that
directory and copy the &lt;strong&gt;epel-6-x86_64.cfg&lt;/strong&gt;, since that configuration file
includes the repositories for CentOS and EPEL, which is exactly the repos
needed for satisfying dependencies for collectd.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cd /etc/mock&lt;/span&gt;
&lt;span class="go"&gt;sudo cp epel-6-x86_64.cfg centos-6-x86_64.cfg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, we can customize the &lt;strong&gt;centos-6-x86_64.cfg &lt;/strong&gt; configuration file.  You can
make the following changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;change &lt;strong&gt;config_opts['root']&lt;/strong&gt; from &lt;strong&gt;epel-6-x86_64&lt;/strong&gt; to &lt;strong&gt;centos-6-x86_64&lt;/strong&gt; to match
  the name of our configuration&lt;/li&gt;
&lt;li&gt;remove unneeded yum repositories, such as &lt;strong&gt;testing&lt;/strong&gt; and &lt;strong&gt;local&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;optionally, you could add the &lt;strong&gt;config_opts['macros']['%dist']&lt;/strong&gt; option and
  set it to something like &lt;strong&gt;.org.el6&lt;/strong&gt;, which would include the name of your
  &lt;em&gt;org&lt;/em&gt; into the RPM names to help distinguish them from RPMs in the CentOS
  and EPEL repositories.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The mock utility should be run as non-root.  Any user using mock should be a
member of the mock group:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;sudo usermod -a -G mock makerpm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, use the &lt;strong&gt;newgrp&lt;/strong&gt; command to change groups during the current login
session:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;newgrp mock&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Mock needs the spec file to first build the SRPM.  Copy the spec file to the
SPECS directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;cp collectd-5.5.0/contrib/redhat/collectd.spec $HOME/rpmbuild/SPECS/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As before, use &lt;strong&gt;spectool&lt;/strong&gt; to download the sources specified in the spec file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;spectool -R -g collectd.spec&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, instruct mock to use our custom &lt;em&gt;centos-6-x86_64&lt;/em&gt; configuration and build
a source rpm from the spec file and sources:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;mock -r centos-6-x86_64 --buildsrpm \&lt;/span&gt;
&lt;span class="go"&gt;--spec $HOME/rpmbuild/SPECS/collectd.spec \&lt;/span&gt;
&lt;span class="go"&gt;--sources $HOME/rpmbuild/SOURCES&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default, all builds are written in the &lt;strong&gt;/var/lib/mock&lt;/strong&gt; directory.  After
building the SRPM in the previous command, the output shows where the results
are written:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt;&lt;span class="sr"&gt;/or logs in: /var/lib/mock/centos-6-x86_64/&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Mock will build the RPMs in a chroot environment and install
all the necessary packages.  Therefore, there is no need to run
&lt;strong&gt;yum-builddep&lt;/strong&gt;. Mock will take care of them.&lt;/p&gt;
&lt;p&gt;Lastly, instruct mock to build the collectd RPMs using the source RPM built in
the previous step:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;mock -r centos-6-x86_64 --no-clean --rebuild /var/lib/mock/centos-6-x86_64/result/collectd-5.5.0-1.el6.src.rpm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again, the output will show where the built RPMs are written:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;INFO: Results and/or logs in: /var/lib/mock/centos-6-x86_64/result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/lib/mock/centos-6-x86_64/result/
ls *rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;collectd-netlink-5.5.0-1.el6.x86_64.rpm
collectd-5.5.0-1.el6.src.rpm
collectd-nginx-5.5.0-1.el6.x86_64.rpm
collectd-5.5.0-1.el6.x86_64.rpm
collectd-notify_desktop-5.5.0-1.el6.x86_64.rpm
collectd-amqp-5.5.0-1.el6.x86_64.rpm
collectd-notify_email-5.5.0-1.el6.x86_64.rpm
collectd-apache-5.5.0-1.el6.x86_64.rpm
collectd-nut-5.5.0-1.el6.x86_64.rpm
collectd-ascent-5.5.0-1.el6.x86_64.rpm
collectd-openldap-5.5.0-1.el6.x86_64.rpm
collectd-bind-5.5.0-1.el6.x86_64.rpm
collectd-perl-5.5.0-1.el6.x86_64.rpm
collectd-ceph-5.5.0-1.el6.x86_64.rpm
collectd-php-collection-5.5.0-1.el6.x86_64.rpm
collectd-collection3-5.5.0-1.el6.x86_64.rpm
collectd-pinba-5.5.0-1.el6.x86_64.rpm
collectd-contrib-5.5.0-1.el6.x86_64.rpm
collectd-ping-5.5.0-1.el6.x86_64.rpm
collectd-curl-5.5.0-1.el6.x86_64.rpm
collectd-postgresql-5.5.0-1.el6.x86_64.rpm
collectd-curl_json-5.5.0-1.el6.x86_64.rpm
collectd-python-5.5.0-1.el6.x86_64.rpm
collectd-curl_xml-5.5.0-1.el6.x86_64.rpm
collectd-redis-5.5.0-1.el6.x86_64.rpm
collectd-dbi-5.5.0-1.el6.x86_64.rpm
collectd-rrdtool-5.5.0-1.el6.x86_64.rpm
collectd-debuginfo-5.5.0-1.el6.x86_64.rpm
collectd-sensors-5.5.0-1.el6.x86_64.rpm
collectd-disk-5.5.0-1.el6.x86_64.rpm
collectd-smart-5.5.0-1.el6.x86_64.rpm
collectd-dns-5.5.0-1.el6.x86_64.rpm
collectd-snmp-5.5.0-1.el6.x86_64.rpm
collectd-email-5.5.0-1.el6.x86_64.rpm
collectd-utils-5.5.0-1.el6.x86_64.rpm
collectd-gmond-5.5.0-1.el6.x86_64.rpm
collectd-varnish-5.5.0-1.el6.x86_64.rpm
collectd-hddtemp-5.5.0-1.el6.x86_64.rpm
collectd-virt-5.5.0-1.el6.x86_64.rpm
collectd-ipmi-5.5.0-1.el6.x86_64.rpm
collectd-write_http-5.5.0-1.el6.x86_64.rpm
collectd-iptables-5.5.0-1.el6.x86_64.rpm
collectd-write_redis-5.5.0-1.el6.x86_64.rpm
collectd-java-5.5.0-1.el6.x86_64.rpm
collectd-write_riemann-5.5.0-1.el6.x86_64.rpm
collectd-log_logstash-5.5.0-1.el6.x86_64.rpm
libcollectdclient-5.5.0-1.el6.x86_64.rpm
collectd-lvm-5.5.0-1.el6.x86_64.rpm
libcollectdclient-devel-5.5.0-1.el6.x86_64.rpm
collectd-memcachec-5.5.0-1.el6.x86_64.rpm
collectd-modbus-5.5.0-1.el6.x86_64.rpm
collectd-mysql-5.5.0-1.el6.x86_64.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;Mock is a great tool for building RPMs.  You get a clean chroot environment in
which to build RPMs.  Building from a source rpm or a spec file is slightly
more involved.  In the last part of this guide, Part 4, we will look at signing
our RPMs and distributing the GPG key.&lt;/p&gt;</summary><category term="rpm"></category><category term="collectd"></category></entry><entry><title>How to Setup an RPM Signing Key</title><link href="http://giovannitorres.me/how-to-setup-an-rpm-signing-key.html" rel="alternate"></link><published>2015-05-29T13:47:00-04:00</published><author><name>Giovanni Torres</name></author><id>tag:giovannitorres.me,2015-05-29:how-to-setup-an-rpm-signing-key.html</id><summary type="html">&lt;h4&gt;Introduction&lt;/h4&gt;
&lt;p&gt;In &lt;a href="http://giovannitorres.me/how-to-setup-an-rpm-build-environment-on-centos-6.html"&gt;Part 1&lt;/a&gt; of
this series, we set up an RPM build environment with a dedicated user for
building RPMs.  &lt;/p&gt;
&lt;p&gt;Before we actually walk through the steps for building an RPM, we need to
create a GPG key to sign the RPMs before they are distributed and installed.
Signing RPMs is a good practice and ensures all the installed RPMs in your
environment are verified from trusted sources.&lt;/p&gt;
&lt;p&gt;In this guide, we will walk through the steps required to create your own RPM
GPG signing key, distribute it and import it into a machine's RPM database.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Prerequisites&lt;/h4&gt;
&lt;p&gt;Creating a GPG key requires a certain amount of entropy in order to ensure
sufficient randomness.  If you are following this guide on a virtual machine,
you will need to make sure that the virtual machine has sufficient entropy.&lt;/p&gt;
&lt;p&gt;See this &lt;a href="http://giovannitorres.me/increasing-entropy-on-virtual-machines.html"&gt;post&lt;/a&gt; on how to
increase the entropy on your virtual machine using &lt;em&gt;rng-tools&lt;/em&gt; before
continuing.&lt;/p&gt;
&lt;p&gt;Additionally, the steps in this guide will be carried out by the &lt;strong&gt;makerpm&lt;/strong&gt;
user.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Install Packages&lt;/h4&gt;
&lt;p&gt;To install the GPG package, run the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install gnupg2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Create a GPG Key Pair&lt;/h4&gt;
&lt;p&gt;Use the &lt;em&gt;gpg&lt;/em&gt; command to create a new key pair:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg --gen-key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;strong&gt;--gen-key&lt;/strong&gt; option is used interactively.  Select the key you want to use.
The first option, &lt;em&gt;RSA and RSA&lt;/em&gt;, creates an RSA key for digital signing and
another RSA key for encryption.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Please select what kind of key you want:
   (1) RSA and RSA (default)
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
Your selection? 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, select the size.  The default &lt;em&gt;2048&lt;/em&gt; bits are sufficient, but if you are
feeling particularly paranoid, go for &lt;em&gt;4096&lt;/em&gt; bits.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;RSA keys may be between 1024 and 4096 bits long.
What keysize do you want? (2048) 2048
Requested keysize is 2048 bits
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, choose how long the key should be valid.  In this example, we choose the
default choice, &lt;em&gt;0&lt;/em&gt;, so the key will not expire.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Please specify how long the key should be valid.
         0 = key does not expire
      &amp;lt;n&amp;gt;  = key expires in n days
      &amp;lt;n&amp;gt;w = key expires in n weeks
      &amp;lt;n&amp;gt;m = key expires in n months
      &amp;lt;n&amp;gt;y = key expires in n years
Key is valid for? (0) 
Key does not expire at all
Is this correct? (y/N) y
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, you will need to fill out some identifying information about the key, like
your name and email.  In this example, we leave the &lt;em&gt;Comment&lt;/em&gt; field empty.
After filling out the fields, you are prompted to confirm the information or
change any of the fields before continuing.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;GnuPG needs to construct a user ID to identify your key.

Real name: Example Org Signing Key
Email address: support@example.com
Comment: 
You selected this USER-ID:
    &amp;quot;Example Org Signing Key &amp;lt;support@example.com&amp;gt;&amp;quot;

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last step in creating the key pair is to protect your secret key with a
passphrase.  Note the use of a suggested passphrase and not a password.  We
recommend using an easy to remember sentence to protect the secret key.&lt;/p&gt;
&lt;p&gt;You should now be presented with a curses based prompt to enter and confirm
your passphrase.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;┌─────────────────────────────────────────────────────┐
│ Enter passphrase                                    │
│                                                     │
│                                                     │
│ Passphrase ________________________________________ │
│                                                     │
│   &amp;lt;OK&amp;gt;                             &amp;lt;Cancel&amp;gt;         │
└─────────────────────────────────────────────────────┘
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This passphrase prompt is displayed by the &lt;em&gt;pinentry&lt;/em&gt; package. If you are in an
X environment, whether on a desktop or via SSH with X11 forwarding enabled to a
remote server, you may get a GUI version of the passphrase prompt.  To get the
GUI prompt, however, you will need to have the &lt;em&gt;pinentry-gtk&lt;/em&gt; package installed
if you are using GNOME and &lt;em&gt;pinentry-qt&lt;/em&gt; or &lt;em&gt;pinentry-qt4&lt;/em&gt; if you are using KDE.&lt;/p&gt;
&lt;p&gt;After typing your password, the key generation may stall and you may see the following message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This has to do with insufficient entropy.  Again, see this
&lt;a href="http://giovannitorres.me/increasing-entropy-on-virtual-machines.html"&gt;post&lt;/a&gt; on how to increase
the entropy on your virtual machine.  You may open another terminal to the
server you are generating the keys on and install and run &lt;em&gt;rng-tools&lt;/em&gt;.  Shortly
after the &lt;em&gt;rngd&lt;/em&gt; daemon is running, the key generation should complete and you should see a message like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg: key 3D832D1E marked as ultimately trusted
public and secret key created and signed.

gpg: checking the trustdb
gpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model
gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u
pub   2048R/3D832D1E 2015-05-29
      Key fingerprint = 7F50 5CA9 0CD0 DBF1 FAC2  AB46 E5E5 4444 3D83 2D1E
uid                  Example Org Signing Key &amp;lt;support@example.com&amp;gt;
sub   2048R/D4F51F8B 2015-05-29
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Confirming your keys&lt;/h4&gt;
&lt;p&gt;To list your keys, run the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg --list-keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You will see a listing of all keys.  In this example, only a single key is listed, the one we just created from the above steps.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/home/makerpm/.gnupg/pubring.gpg
---------------------------------
pub   2048R/3D832D1E 2015-05-29
uid                  Example Org Signing Key &amp;lt;support@example.com&amp;gt;
sub   2048R/D4F51F8B 2015-05-29
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Troubleshooting TTY Issues&lt;/h4&gt;
&lt;p&gt;There is an &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=659512#c5"&gt;issue&lt;/a&gt;,
apparently with the &lt;em&gt;gnupg2&lt;/em&gt; package, where if you &lt;em&gt;su&lt;/em&gt;, i.e. switch, to
another user, a new pseudo-terminal is not opened for the switched user.&lt;/p&gt;
&lt;p&gt;This causes problems since gnupg2 requires permissions to open a tty for the
&lt;em&gt;pinentry&lt;/em&gt; package, which is responsible for displaying the passphrase prompt
to the screen. Therefore, if you run the &lt;strong&gt;gpg --gen-key&lt;/strong&gt; command after
switching to a different user, you may see one of the following error messages:&lt;/p&gt;
&lt;p&gt;Without X11 Forwarding:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg-agent[5569]: directory `/home/makerpm/.gnupg/private-keys-v1.d&amp;#39; created
gpg-agent[5569]: command get_passphrase failed: Operation cancelled
gpg: cancelled by user
gpg: Key generation canceled.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With X11 Forwarding:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;X11 connection rejected because of wrong authentication.
xprop:  unable to open display &amp;#39;localhost:10.0&amp;#39;
X11 connection rejected because of wrong authentication.

(pinentry-gtk-2:10602): Gtk-WARNING **: cannot open display: localhost:10.0
gpg-agent[10601]: can&amp;#39;t connect server: ec=4.16383
gpg-agent[10601]: can&amp;#39;t connect to the PIN entry module: End of file
gpg-agent[10601]: command get_passphrase failed: No pinentry
gpg: problem with the agent: No pinentry
gpg: Key generation canceled.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;# Workaround&lt;/h4&gt;
&lt;p&gt;In order to work around the above TTY issue, you will need to use X11
forwarding when switching to a different user.  To do this, you need an
&lt;em&gt;export&lt;/em&gt; file in root's &lt;strong&gt;.xauth&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;First, switch to root:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;su -
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, create an export file with the user you want to switch to, for example,
&lt;strong&gt;user1&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd $HOME
mkdir -p .xauth
echo &amp;quot;user1&amp;quot; &amp;gt;&amp;gt; .xauth/export
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Switch to &lt;strong&gt;user1&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;su - user1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, if you try to generate gpg keys, pinentry will present the passphrase
prompt.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Distributing the Public Key&lt;/h4&gt;
&lt;p&gt;If you plan to distribute custom built RPMs to multiple or even all machines in your
environment, you will need to distribute the public key to all machines and
import it into each machine's local RPM database.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5&gt;Export the Signing Key&lt;/h5&gt;
&lt;p&gt;We need to export the signing key into ASCII armored output, which is a form of
binary-to-text encoding.  We need the &lt;em&gt;name&lt;/em&gt; of the key in order to export it.&lt;/p&gt;
&lt;p&gt;Get a list of keys:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg --list-keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output, as seen above, should similar to the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/home/makerpm/.gnupg/pubring.gpg
---------------------------------
pub   2048R/3D832D1E 2015-05-29
uid                  Example Org Signing Key &amp;lt;support@example.com&amp;gt;
sub   2048R/D4F51F8B 2015-05-29
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; is in the &lt;em&gt;uid&lt;/em&gt; line, before the email address.  In this case, it is
&lt;strong&gt;Example Org Signing Key&lt;/strong&gt;.  Use gpg to export this key in ASCII armored
output to a file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg --export -a &amp;quot;Example Org Signing Key&amp;quot; &amp;gt; RPM-GPG-KEY-example-org-signing-key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The resulting file, &lt;strong&gt;RPM-GPG-KEY-example-org-signing-key&lt;/strong&gt;, is the RPM signing
key that we can distribute to other machines.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5&gt;Importing the Key into the RPM database&lt;/h5&gt;
&lt;p&gt;On RHEL 6 and its clones, the default location on the filesystem for RPM GPG
keys are &lt;strong&gt;/etc/pki/rpm-gpg&lt;/strong&gt;.  Use your tool of choice, such as scp, rsync,
Puppet, Ansible, etc., to copy the file to any remote machine where you will
install custom RPMs signed with this key.&lt;/p&gt;
&lt;p&gt;If SELinux is in &lt;em&gt;Enforcing&lt;/em&gt; mode, be sure that the TYPE in the target security
context is &lt;strong&gt;cert_t&lt;/strong&gt;. Use the &lt;strong&gt;ls&lt;/strong&gt; command to view the SELinux context of
the key file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -lZ /etc/pki/rpm-gpg/RPM-GPG-KEY-example-org-signing-key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output should look something similar to the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-rw-r--r--. root root unconfined_u:object_r:cert_t:s0 /etc/pki/rpm-gpg/RPM-GPG-KEY-example-org-signing-key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lastly, import the key into the RPM database on all machines where you copied
the key. This command will not return any output and exit with return code &lt;strong&gt;0&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-example-org-signing-key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5&gt;Verify Key Import&lt;/h5&gt;
&lt;p&gt;To verify that the key has been imported, we can search the RPM database.
First, we need the public GPG key id.  In the output of &lt;strong&gt;gpg --list-keys&lt;/strong&gt;,
the public key id is found in the &lt;strong&gt;pub&lt;/strong&gt; line.  It is the 8 hex digits after
the slash.  The size of the key, &lt;em&gt;2048&lt;/em&gt;, and the algorithm, &lt;em&gt;R&lt;/em&gt; for RSA, is
shown before the slash on the &lt;strong&gt;pub&lt;/strong&gt; line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pub   2048R/3D832D1E 2015-05-29
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, use the &lt;strong&gt;rpm&lt;/strong&gt; command to find the public key.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpm -qa gpg-pubkey\*
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output will show all GPG keys that have been imported into the RPM
database.  You should see your public key ID, in lowercase, in one of the pubkeys listed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg-pubkey-3d832d1e-556873e0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, use &lt;strong&gt;rpm&lt;/strong&gt; command again to see more information about the key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpm -qi gpg-pubkey-3d832d1e-556873e0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output should look similar to the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name        : gpg-pubkey                   Relocations: (not relocatable)
Version     : 3d832d1e                          Vendor: (none)
Release     : 556873e0                      Build Date: Fri 29 May 2015 08:13:22 PM EDT
Install Date: Fri 29 May 2015 08:13:22 PM EDT      Build Host: localhost
Group       : Public Keys                   Source RPM: (none)
Size        : 0                                License: pubkey
Signature   : (none)
Summary     : gpg(Example Org Signing Key &amp;lt;support@example.com&amp;gt;)
Description :
-----BEGIN PGP PUBLIC KEY BLOCK-----
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;You now have an RPM GPG key that you can use sign and verify custom RPMs.  In
Part 3 of this guide, we will look at various ways of building RPMs.&lt;/p&gt;</summary><category term="rpm"></category><category term="gpg"></category></entry><entry><title>How to Setup an RPM Build Environment on CentOS 6</title><link href="http://giovannitorres.me/how-to-setup-an-rpm-build-environment-on-centos-6.html" rel="alternate"></link><published>2015-05-24T10:38:00-04:00</published><author><name>Giovanni Torres</name></author><id>tag:giovannitorres.me,2015-05-24:how-to-setup-an-rpm-build-environment-on-centos-6.html</id><summary type="html">&lt;h4&gt;Introduction&lt;/h4&gt;
&lt;p&gt;If you are working on or developing software for a RHEL based operating system,
building RPMs is a great way to distribute packages within a group or
enterprise.  Sometimes, the package you want is not in any of the usual RPM
repositories, like &lt;a href="https://fedoraproject.org/wiki/EPEL" title="EPEL"&gt;EPEL&lt;/a&gt; for
example. &lt;/p&gt;
&lt;p&gt;At this point, you can compile the package from source and distribute it to
each machine or place it on a shared filesystem.  Alternatively, you could use
a configuration management tool like Puppet or Ansible to take the tarball and
run the build/compile/install commands for you.&lt;/p&gt;
&lt;p&gt;In this guide, we will walk through the steps required to setup an environment
to build RPMs.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Prerequisites&lt;/h4&gt;
&lt;p&gt;Before continuing with this guide, start with a new virtual machine with the
EPEL yum repository configured.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Install Packages&lt;/h4&gt;
&lt;p&gt;Building RPMs requires several development packages such as the GCC compiler
and the autotools suite.&lt;/p&gt;
&lt;p&gt;To install the required packages, run the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum groupinstall &amp;#39;Development Tools&amp;#39;
sudo yum install yum install rpmdevtools yum-utils
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Create a Dedicated User&lt;/h4&gt;
&lt;p&gt;Do &lt;strong&gt;not&lt;/strong&gt; build RPMs as the &lt;em&gt;root&lt;/em&gt; user!  You have been warned.  Things can go
really wrong if the spec file is not written properly.  In fact, the &lt;em&gt;rpmbuild&lt;/em&gt;
command will build the RPM in its own &lt;em&gt;BUILD_ROOT&lt;/em&gt;, therefore root access is
simply not needed.  It is better to build RPMs as your own user or just create
a dedicated user for this process. This way, if the RPM build environment is
setup on a shared virtual machine, other users can switch to the dedicated user
and use the same environment.&lt;/p&gt;
&lt;p&gt;Create a dedicated user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo useradd makerpm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Set Up The rpmbuild Tree&lt;/h4&gt;
&lt;p&gt;This process is trivial when using the &lt;em&gt;rpmdevtools&lt;/em&gt; package. This package
contains several scripts that help with building RPM packages. &lt;/p&gt;
&lt;p&gt;As the &lt;em&gt;makerpm&lt;/em&gt; user, run the &lt;em&gt;rpmdev-setuptree&lt;/em&gt; command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo su - makerpm
rpmdev-setuptree
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;rpmdev-setuptree&lt;/em&gt; will create the &lt;em&gt;~/rpmbuild&lt;/em&gt; directory and also create a
&lt;em&gt;.rpmmacros&lt;/em&gt; file in the home directory.  The needed subdirectories are
created under the rpmbuild directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[makerpm@localhost ~]$ tree rpmbuild/
rpmbuild/
├── BUILD
├── RPMS
├── SOURCES
├── SPECS
└── SRPMS

5 directories, 0 files
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;The .rpmmacros File&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;rpmdev-setuptree&lt;/em&gt; command also installs a &lt;em&gt;.rpmmacros&lt;/em&gt; file in the user's
home directory.  This file contains three lines by default:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%_topdir      %&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;/rpmbuild
%_smp_mflags  -j3
%__arch_install_post   /usr/lib/rpm/check-rpaths /usr/lib/rpm/check-buildroot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first macro, &lt;em&gt;%_topdir&lt;/em&gt;, is set to the &lt;em&gt;/home/makerpm/rpmbuild&lt;/em&gt; by default.
It refers to the root directory of the RPM build environment.&lt;/p&gt;
&lt;p&gt;The second macro, &lt;em&gt;%_smp_mflags&lt;/em&gt;, is to set the level or parallelism for the
&lt;em&gt;make&lt;/em&gt; step in building the package.  On a dedicated machine, you can set this
to the number of available processors.&lt;/p&gt;
&lt;p&gt;Use the nproc command to determine the number of available processors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[makerpm@localhost ~]$ nproc
4
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The third macro, &lt;em&gt;%__arch_install_post&lt;/em&gt;, runs various checks at the end of
building the RPM package.  The default macro has a check to look for &lt;em&gt;rpaths&lt;/em&gt;
in the buildroot directories.  This has to do with hardcoding library paths in
the resulting binaries.  The Linux dynamic linker, &lt;em&gt;ld&lt;/em&gt;, can find the right
libraries as long as the libraries are put in the standard locations, such as
/lib, /lib64, etc. or an appropriate config file is placed &lt;em&gt;/etc/ld.so.conf.d&lt;/em&gt;
for libraries in non-standard locations.&lt;/p&gt;
&lt;p&gt;For a more thorough explanation, see this Fedora Project link:
&lt;a href="https://fedoraproject.org/wiki/Packaging:Guidelines#Beware_of_Rpath"&gt;https://fedoraproject.org/wiki/Packaging:Guidelines#Beware_of_Rpath&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;You now have a working RPM build environment with a dedicated user for building
RPMs.  In the Part 2 of this guide, we will setup a signing key so that you can
follow good practice and sign your RPM packages.&lt;/p&gt;</summary><category term="rpm"></category></entry></feed>